<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.work.web_work_on_class.mapper.UserGroupRelationMapper">
  <resultMap id="BaseResultMap" type="com.work.web_work_on_class.model.UserGroupRelation">
    <id column="relation_id" jdbcType="INTEGER" property="relationId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="group_id" jdbcType="INTEGER" property="groupId" />
    <result column="nicky_name" jdbcType="VARCHAR" property="nickyName" />
    <result column="join_time" jdbcType="TIMESTAMP" property="joinTime" />
  </resultMap>
  <sql id="Base_Column_List">
    relation_id, user_id, group_id, nicky_name, join_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_group_relation
    where relation_id = #{relationId,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_group_relation
    where relation_id = #{relationId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="relation_id" keyProperty="relationId" parameterType="com.work.web_work_on_class.model.UserGroupRelation" useGeneratedKeys="true">
    insert into user_group_relation (user_id, group_id, nicky_name, 
      join_time)
    values (#{userId,jdbcType=INTEGER}, #{groupId,jdbcType=INTEGER}, #{nickyName,jdbcType=VARCHAR}, 
      #{joinTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="relation_id" keyProperty="relationId" parameterType="com.work.web_work_on_class.model.UserGroupRelation" useGeneratedKeys="true">
    insert into user_group_relation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="groupId != null">
        group_id,
      </if>
      <if test="nickyName != null">
        nicky_name,
      </if>
      <if test="joinTime != null">
        join_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="nickyName != null">
        #{nickyName,jdbcType=VARCHAR},
      </if>
      <if test="joinTime != null">
        #{joinTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.work.web_work_on_class.model.UserGroupRelation">
    update user_group_relation
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="groupId != null">
        group_id = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="nickyName != null">
        nicky_name = #{nickyName,jdbcType=VARCHAR},
      </if>
      <if test="joinTime != null">
        join_time = #{joinTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where relation_id = #{relationId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.work.web_work_on_class.model.UserGroupRelation">
    update user_group_relation
    set user_id = #{userId,jdbcType=INTEGER},
      group_id = #{groupId,jdbcType=INTEGER},
      nicky_name = #{nickyName,jdbcType=VARCHAR},
      join_time = #{joinTime,jdbcType=TIMESTAMP}
    where relation_id = #{relationId,jdbcType=INTEGER}
  </update>
</mapper>